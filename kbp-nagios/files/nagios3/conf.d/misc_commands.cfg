# Better MySQL test than the default
define command{
	command_name	check_mysql_master
	command_line	/usr/lib/nagios/plugins/check_mysql -H $HOSTADDRESS$ -u $ARG1$
}

define command{
	command_name	check_mysql_slave
	command_line	/usr/lib/nagios/plugins/check_mysql -H $HOSTADDRESS$ -u $ARG1$ -S -w 300
}

# The SQL query needs to return "1", any other value will return a CRITICAL state
define command{
	command_name	check_mysql_query_is_true
	command_line	/usr/lib/nagios/plugins/check_mysql_query -H $HOSTADDRESS$ -d $ARG1$ -q $ARG2$ -w 1:1 -c 1:1
}

# We want a ping to ignore errors
define command{
	command_name	check_ping_no_errors
	command_line	/usr/lib/nagios/plugins/check_ping -H $HOSTADDRESS$ -w $ARG1$ -c $ARG2$ 2>&1
}

# Check HTTP on a specific port
define command{
	command_name	check_http_on_port
	command_line	/usr/lib/nagios/plugins/check_http -t 20 -H $HOSTADDRESS$ -p $ARG1$
}

# Check HTTP with a specific hostname
define command{
        command_name    check_http_vhost
        command_line    /usr/lib/nagios/plugins/check_http -t 20 -I $HOSTADDRESS$ -H $ARG1$
}

# Check HTTP on a specific hostname and check that the response contains the specified string
define command{
	command_name	check_http_vhost_url_and_response
	command_line	/usr/lib/nagios/plugins/check_http -t 20 -I $HOSTADDRESS$ -H $ARG1$ -u $ARG2$ -r $ARG3$
}

# Check HTTP on a specific hostname and check a specific uri
define command{
	command_name	check_http_vhost_and_url
	command_line	/usr/lib/nagios/plugins/check_http -t 20 -I $HOSTADDRESS$ -H $ARG1$ -u $ARG2$
}

# Check HTTP on a specific port and a specific URL
define command{
	command_name	check_http_on_port_with_url
	command_line	/usr/lib/nagios/plugins/check_http -t 20 -H $HOSTADDRESS$ -p $ARG1$ -u $ARG2$
}

# Check HTTP on a specific port and a specific URL, and check that the response contains the specified string
define command{
	command_name	check_http_on_port_with_url_and_response
	command_line	/usr/lib/nagios/plugins/check_http -t 20 -I $HOSTADDRESS$ -p $ARG1$ -u $ARG2$ -r $ARG3$
}

# Check HTTP on a specific port, with a specific vhost and a specific URL, and check that the response contains the specified string
define command{
	command_name	check_http_on_port_with_vhost_url_and_response
	command_line	/usr/lib/nagios/plugins/check_http -t 20 -I $HOSTADDRESS$ -H $ARG1$ -p $ARG2$ -u $ARG3$ -r $ARG4$
}

# Trac needs authentication, but we only need to check if it's running
define command{
	command_name	check_http_401
	command_line	/usr/lib/nagios/plugins/check_http -t 20 -H $HOSTADDRESS$ -e 401
}

# Each Trac site needs to be locked, check that
define command{
	command_name	check_https_vhost_url_response
	command_line	/usr/lib/nagios/plugins/check_http -t 20 -I $HOSTADDRESS$ -H $ARG1$ -u $ARG2$ -e $ARG3$ --ssl
}

# We need to check sites on a separate IP address
define command{
	command_name	check_http_vhost_url_and_ip
	command_line	/usr/lib/nagios/plugins/check_http -t 20 -H $ARG1$ -I $ARG3$ -u $ARG2$
}

# Apt-proxy check, needs to request a specific URL
define command{
	command_name	check_apt-proxy
	command_line	/usr/lib/nagios/plugins/check_http -t 20 -H $HOSTADDRESS$ -p 9999 -u "/debian/dists/stable/Release.gpg"
}

# Use LDAPv3
define command{
        command_name    check_ldap3
	command_line    /usr/lib/nagios/plugins/check_ldap -H $HOSTADDRESS$ -b $ARG1$ -3
}

# Tomcat instances run all on another port, so we need to specify this
define command{
	command_name	check_tomcat_port
	command_line	/usr/lib/nagios/plugins/check_http -t 20 -H $HOSTADDRESS$ -p $ARG1$ -e "HTTP/1."
}

# Autonomy checks
define command{
	command_name	check_autonomy
	command_line	/usr/lib/nagios/plugins/check_http -t 20 -H $HOSTADDRESS$ -p 9000 -s $ARG1$ -u "/a=getstatus"
}

define command{
	command_name	check_autonomy_running
	command_line	/usr/lib/nagios/plugins/check_http -t 20 -H $HOSTADDRESS$ -p $ARG1$ -s "<RESPONSE>Running</RESPONSE>"
}

define command{
	command_name	check_autonomy_dah
	command_line	/usr/lib/nagios/plugins/check_http -t 20 -H $HOSTADDRESS$ -p $ARG1$ -u "/a=getstatus" -s "<response>SUCCESS</response>"
}

# Puppetmaster
define command{
	command_name	check_puppetmaster
	command_line	/usr/lib/nagios/plugins/check_http -t 20 -H $HOSTADDRESS$ -p 8140 --ssl -e 405
}

# IRC
define command{
	command_name	check_irc
	command_line	/usr/lib/nagios/plugins/check_ircd -H $HOSTADDRESS$ -w 20 -c 100 -p 5667
}

# DNS check which allows specifying the hostname to resolve
define command{
	command_name	check_dns2
	command_line	/usr/lib/nagios/plugins/check_dns -H $ARG1$ -s $HOSTADDRESS$
}

# Check HTTP on a specific hostname and check that the response contains the specified string
define command{
	command_name	check_matrix_site
	command_line	/usr/lib/nagios/plugins/check_http -t 20 -I $HOSTADDRESS$ -H $ARG1$ -u $ARG2$ -e $ARG3$ -w 25 -c 50
}

# Check PostgreSQL with a user and password
define command{
	command_name	check_postgresql
	command_line	/usr/lib/nagios/plugins/check_pgsql -H $HOSTADDRESS$ -l $ARG1$ -p $ARG2$
}

# Check validity of SSL certificate
define command{
	command_name	check_ssl_cert
	command_line	/usr/lib/nagios/plugins/check_http -t 20 -I $HOSTADDRESS$ -H $ARG1$ -C $ARG2$
}

# Jabber
define command{
	command_name	check_jabber
	command_line	/usr/lib/nagios/plugins/check_jabber -H $HOSTADDRESS$ -p 5223 -e "<?xml version='1.0' encoding='UTF-8'?><stream:stream xmlns:stream=\"http://etherx.jabber.org/streams\""
}

# Check MySQL replication lag
define command{
	command_name	check_mysql_replication_lag
	command_line	/usr/local/lib/nagios/plugins/check_mysql_replication_lag --host $HOSTADDRESS$ --defaults-file=/var/lib/nagios3/mysql-heartbeat-check.cnf -w $ARG1$ -c $ARG2$
}

# mk-heartbeat should be running
define command{
	command_name	check_single_process
	command_line	/usr/lib/nagios/plugins/check_procs -w 1:1 -c 1:1 -a $ARG1$
}
